Landau chapter 2.3.1

3) The plot of sin(x) vs. n oscillates. The subtractive cancellation is visible when the plot of 
   sin(x) vs. n crosses the x-axis. The worst of these points occurs near n = x/2. The point at n = 5
   is almost 800 and the point at n = 4 is below -800. Since sin(3pi) is approximately -6.2e-13, this 
   is a very extreme case of subtractive cancellation.

4) At x ~ 3pi without reducing x, the log(error) is -0.8399690965715817. sin(3pi) = sin(pi). Using
   x ~ pi instead reduces log(error) down to -2.40778541799477 and the plot of sin(x) vs. n only
   crosses the y-axis ~ 5 times instead of ~ 14 times. This is a better and more precise result.

5) This was tested without limiting the values of x to the [-pi, pi] range. Between 1 and 10 there's
   a fairly constant in the error with exceptions at pi, 2pi, and 3pi (where sin(x) = 0) where the
   error is much higher. Again, that's due to subtractive cancellation. By x = 21.7, the error is
   greater than 1e-7. At x = 37.5, log(error) becomes positive. The series reports as nan past
   around x = 63.484. Past around x = 43, the series at N = 1 has less error than the final sum.

6) The error plot functionality is implemented with user input as part of the code. I kept the error
   as log(error) because plotting abs(error) vs. n led to some weird behavior with CorePlot where at
   certain x values, the plot would cross the y-axis several times despite there being no points at
   negative y.